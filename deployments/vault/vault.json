{
  "source": {
    "hash": "0xde319049875417034efd77673b40e4f951921d13616d7a62549461259f0f97f7",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.75.0",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "3.2.0",
      "rust_toolchain": "stable-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "vault",
    "version": "0.1.0",
    "authors": [
      "Brandon <brandon@kintsu.xyz>",
      "John <john@kintsu.xyz"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "share_token_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          },
          {
            "label": "registry_code_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          },
          {
            "label": "nomination_agent_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 9
        },
        "selector": "0x9bae9d5e"
      },
      {
        "args": [
          {
            "label": "share_token_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          },
          {
            "label": "registry_code_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          },
          {
            "label": "nomination_agent_hash",
            "type": {
              "displayName": [
                "Hash"
              ],
              "type": 8
            }
          },
          {
            "label": "era",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "custom_era",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 9
        },
        "selector": "0x962be16d"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 4
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 37
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 38
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 8
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 3
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "staker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "azero",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "new_shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "virtual_shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "Staked"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "referral_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "staker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "azero",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "Referral"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "azero",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "incentive",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "virtual_shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "Compounded"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "staker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "unlock_id",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "batch_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "docs": [],
        "label": "UnlockRequested"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "staker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "batch_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "unlock_id",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "UnlockCanceled"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "batch_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "virtual_shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "spot_value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "BatchUnlockSent"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "staker",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "azero",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "batch_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "unlock_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "docs": [],
        "label": "UnlockRedeemed"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "FeesWithdrawn"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "new_fee",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 7
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "virtual_shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "FeesAdjusted"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "new_incentive",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 7
            }
          }
        ],
        "docs": [],
        "label": "IncentiveAdjusted"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "new_minimum_stake",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "MinimumStakeAdjusted"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "new_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [],
        "label": "RoleAdjustFeeTransferred"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "new_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [],
        "label": "RoleFeeToTransferred"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "code_hash",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "docs": [],
        "label": "NewHash"
      },
      {
        "args": [],
        "docs": [],
        "label": "SetHashDisabled"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 11
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " Calculate the value of sAZERO in terms of AZERO with TARGET_DECIMALS precision"
        ],
        "label": "RateProvider::get_rate",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0x73098e66"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Allow users to convert AZERO into sAZERO",
          " Mints the caller sAZERO based on the redemption ratio",
          "",
          " Minimum AZERO amount is required to stake",
          " AZERO must be transferred via transferred_value"
        ],
        "label": "IVault::stake",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 13
        },
        "selector": "0x8db7bbfc"
      },
      {
        "args": [
          {
            "label": "referral_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "IVault::stake_with_referral",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 13
        },
        "selector": "0x71d8a04d"
      },
      {
        "args": [
          {
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Allow user to begin the unlock process",
          " Transfers sAZERO specified in `shares` argument to the vault contract",
          " Unlock is batched into current two era batch request",
          "",
          " Caller must approve the psp22 token contract beforehand"
        ],
        "label": "IVault::request_unlock",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x135c5e12"
      },
      {
        "args": [
          {
            "label": "user_unlock_id",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Allow user to cancel their unlock request",
          "",
          " Must be done in the same batch interval in which the request was originally sent"
        ],
        "label": "IVault::cancel_unlock_request",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xf6a9f352"
      },
      {
        "args": [
          {
            "label": "batch_ids",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 21
            }
          }
        ],
        "default": false,
        "docs": [
          " Trigger unlock requests of previous batched requests",
          " Distributes unlock requests to nominators according to current stake imbalances",
          " Calculates a batch spot values for sAZERO in the batches",
          " Burns associated sAZERO",
          "",
          " Cannot be called for a batch that has not concluded",
          " Cannot be called for a batch that has already been redeemed",
          " Batch IDs must be specified in ascending order (for gas efficient duplicate check)"
        ],
        "label": "IVault::send_batch_unlock_requests",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x8b04fd93"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Attempts to claim unbonded AZERO from all validators"
        ],
        "label": "IVault::delegate_withdraw_unbonded",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x241db085"
      },
      {
        "args": [
          {
            "label": "user",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "unlock_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Allows a user to withdraw staked AZERO",
          "",
          " Returns original deposit amount plus interest to depositor address",
          " Queries the redeemable amount by user AccountId and Claim Vector index",
          " Associated batch unlock request must have been completed",
          " Deletes the user's unlock request",
          " Burns the associated sAZERO tokens"
        ],
        "label": "IVault::redeem",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x56e12ee1"
      },
      {
        "args": [
          {
            "label": "user",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "unlock_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Alternative method for a user to withdraw staked AZERO",
          "",
          " This should be called instead of `redeem()` when insufficient AZERO exists in the Vault and",
          " validator(s) have unbonded AZERO which can be claimed"
        ],
        "label": "IVault::redeem_with_withdraw",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xa2b1d2d6"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Compound earned interest for all validators",
          "",
          " Can be called by anyone",
          " Caller receives an AZERO incentive based on the total AZERO amount compounded"
        ],
        "label": "IVault::compound",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 13
        },
        "selector": "0xdb21fb29"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Claim fees by inflating sAZERO supply",
          "",
          " Caller must have the fee to role (`role_fee_to`)",
          " Mints virtual shares as sAZERO to the caller",
          " Effectively serves as a compounding for protocol fee",
          " sets total_shares_virtual to 0"
        ],
        "label": "IVault::withdraw_fees",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xb9a0159d"
      },
      {
        "args": [
          {
            "label": "code_hash",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "default": false,
        "docs": [
          " Upgrade the contract by the ink env set_code_hash function",
          "",
          " The set code role (`role_set_code`) must be set",
          " Caller must have the set code role (`role_set_code`)",
          " See ink documentation for details https://paritytech.github.io/ink/ink_env/fn.set_code_hash.html"
        ],
        "label": "IVault::set_code",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xa8407009"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::disable_set_code",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xd96db3e7"
      },
      {
        "args": [
          {
            "label": "new_fee",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 7
            }
          }
        ],
        "default": false,
        "docs": [
          " Update the protocol fee",
          "",
          " Caller must have the adjust fee role (`role_adjust_fee`)",
          " Updates the total_shares_virtual accumulator at the old fee level first"
        ],
        "label": "IVault::adjust_fee",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xcd72f871"
      },
      {
        "args": [
          {
            "label": "new_incentive",
            "type": {
              "displayName": [
                "u16"
              ],
              "type": 7
            }
          }
        ],
        "default": false,
        "docs": [
          " Update the compound incentive",
          "",
          " Caller must have the adjust fee role (`role_adjust_fee`)"
        ],
        "label": "IVault::adjust_incentive",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x2454ae71"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_role_adjust_fee",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0xe8d587e5"
      },
      {
        "args": [
          {
            "label": "new_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Transfers adjust fee role to a new account",
          "",
          " Caller must have the adjust fee role (`role_adjust_fee`)"
        ],
        "label": "IVault::transfer_role_adjust_fee",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xd68377d2"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_role_fee_to",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x7ea37868"
      },
      {
        "args": [
          {
            "label": "new_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Transfers fee to role to a new account",
          "",
          " Caller must have the fee to role (`role_fee_to`)"
        ],
        "label": "IVault::transfer_role_fee_to",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0x67d7e7fb"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_role_set_code",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x7461a9b1"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_batch_id",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 25
        },
        "selector": "0x59e14cb2"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_creation_time",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 25
        },
        "selector": "0xb5380a66"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the total amount of bonded AZERO"
        ],
        "label": "IVault::get_total_pooled",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0xbcf8d9da"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the shares effectively in circulation by the protocol including:",
          "     1) sAZERO that has already been minted",
          "     2) sAZERO that could be minted (virtual) representing accumulating protocol fees"
        ],
        "label": "IVault::get_total_shares",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0xe62b9622"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the protocol fees (sAZERO) which can be minted and withdrawn at the current block timestamp"
        ],
        "label": "IVault::get_current_virtual_shares",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0xd579a908"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_fee_percentage",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xdaae5ab7"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_incentive_percentage",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xfbe7e555"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_share_token_contract",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0x035fea73"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "IVault::get_registry_contract",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 22
        },
        "selector": "0xf9b2a5e6"
      },
      {
        "args": [
          {
            "label": "azero",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Calculate the value of AZERO in terms of sAZERO"
        ],
        "label": "IVault::get_shares_from_azero",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0xdba627a3"
      },
      {
        "args": [
          {
            "label": "shares",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Calculate the value of sAZERO in terms of AZERO"
        ],
        "label": "IVault::get_azero_from_shares",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0x8289d431"
      },
      {
        "args": [
          {
            "label": "user",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the unlock requests for a given user"
        ],
        "label": "IVault::get_unlock_requests",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x71287c8d"
      },
      {
        "args": [
          {
            "label": "user",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the number of unlock requests made by a given user"
        ],
        "label": "IVault::get_unlock_request_count",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 12
        },
        "selector": "0x2ee1deae"
      },
      {
        "args": [
          {
            "label": "batch_id",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the information of a batch unlock request for the given batch id"
        ],
        "label": "IVault::get_batch_unlock_requests",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 28
        },
        "selector": "0xc4d4557d"
      },
      {
        "args": [
          {
            "label": "total_pooled",
            "type": {
              "displayName": [
                "u128"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "IVault::get_weight_imbalances",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 32
        },
        "selector": "0x18560cb8"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "role_adjust_fee"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "role_fee_to"
                    },
                    {
                      "layout": {
                        "enum": {
                          "dispatchKey": "0x00000000",
                          "name": "Option",
                          "variants": {
                            "0": {
                              "fields": [],
                              "name": "None"
                            },
                            "1": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0x00000000",
                                      "ty": 0
                                    }
                                  },
                                  "name": "0"
                                }
                              ],
                              "name": "Some"
                            }
                          }
                        }
                      },
                      "name": "role_set_code"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "creation_time"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "total_pooled"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "total_shares_minted"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "total_shares_virtual"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "leaf": {
                                      "key": "0xfe06b35d",
                                      "ty": 4
                                    }
                                  },
                                  "name": "total_shares"
                                },
                                {
                                  "layout": {
                                    "enum": {
                                      "dispatchKey": "0xfe06b35d",
                                      "name": "Option",
                                      "variants": {
                                        "0": {
                                          "fields": [],
                                          "name": "None"
                                        },
                                        "1": {
                                          "fields": [
                                            {
                                              "layout": {
                                                "leaf": {
                                                  "key": "0xfe06b35d",
                                                  "ty": 4
                                                }
                                              },
                                              "name": "0"
                                            }
                                          ],
                                          "name": "Some"
                                        }
                                      }
                                    }
                                  },
                                  "name": "value_at_redemption"
                                },
                                {
                                  "layout": {
                                    "enum": {
                                      "dispatchKey": "0xfe06b35d",
                                      "name": "Option",
                                      "variants": {
                                        "0": {
                                          "fields": [],
                                          "name": "None"
                                        },
                                        "1": {
                                          "fields": [
                                            {
                                              "layout": {
                                                "leaf": {
                                                  "key": "0xfe06b35d",
                                                  "ty": 3
                                                }
                                              },
                                              "name": "0"
                                            }
                                          ],
                                          "name": "Some"
                                        }
                                      }
                                    }
                                  },
                                  "name": "redemption_timestamp"
                                }
                              ],
                              "name": "UnlockRequestBatch"
                            }
                          },
                          "root_key": "0xfe06b35d"
                        }
                      },
                      "name": "batch_unlock_requests"
                    },
                    {
                      "layout": {
                        "root": {
                          "layout": {
                            "leaf": {
                              "key": "0x2b01f583",
                              "ty": 5
                            }
                          },
                          "root_key": "0x2b01f583"
                        }
                      },
                      "name": "user_unlock_requests"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "cooldown_period"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "batch_interval_delay"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 3
                        }
                      },
                      "name": "last_fee_update"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 7
                        }
                      },
                      "name": "fee_percentage"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 7
                        }
                      },
                      "name": "incentive_percentage"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "shares_contract"
                    },
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "struct": {
                                  "fields": [
                                    {
                                      "layout": {
                                        "leaf": {
                                          "key": "0x00000000",
                                          "ty": 0
                                        }
                                      },
                                      "name": "account_id"
                                    }
                                  ],
                                  "name": "CallBuilder"
                                }
                              },
                              "name": "inner"
                            }
                          ],
                          "name": "RegistryRef"
                        }
                      },
                      "name": "registry_contract"
                    }
                  ],
                  "name": "VaultData"
                }
              },
              "name": "data"
            }
          ],
          "name": "Vault"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "sequence": {
            "type": 6
          }
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "creation_time",
                "type": 3,
                "typeName": "Timestamp"
              },
              {
                "name": "share_amount",
                "type": 4,
                "typeName": "Balance"
              },
              {
                "name": "batch_id",
                "type": 3,
                "typeName": "u64"
              }
            ]
          }
        },
        "path": [
          "vault",
          "data",
          "UnlockRequest"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 14
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 14
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Duplication"
              },
              {
                "index": 1,
                "name": "InvalidPercent"
              },
              {
                "index": 2,
                "name": "InvalidBatchUnlockRequest"
              },
              {
                "index": 3,
                "name": "InvalidUserUnlockRequest"
              },
              {
                "index": 4,
                "name": "CooldownPeriod"
              },
              {
                "index": 5,
                "name": "InvalidPermissions"
              },
              {
                "index": 6,
                "name": "NoChange"
              },
              {
                "index": 7,
                "name": "ZeroDepositing"
              },
              {
                "index": 8,
                "name": "ZeroUnbonding"
              },
              {
                "index": 9,
                "name": "ZeroTotalWeight"
              },
              {
                "index": 10,
                "name": "ZeroCompounding"
              },
              {
                "index": 11,
                "name": "MinimumStake"
              },
              {
                "fields": [
                  {
                    "type": 16,
                    "typeName": "String"
                  }
                ],
                "index": 12,
                "name": "InkEnvError"
              },
              {
                "fields": [
                  {
                    "type": 17,
                    "typeName": "RuntimeError"
                  }
                ],
                "index": 13,
                "name": "InternalError"
              },
              {
                "fields": [
                  {
                    "type": 18,
                    "typeName": "PSP22Error"
                  }
                ],
                "index": 14,
                "name": "TokenError"
              },
              {
                "index": 15,
                "name": "InternalTokenError"
              }
            ]
          }
        },
        "path": [
          "vault",
          "errors",
          "VaultError"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CallRuntimeFailed"
              },
              {
                "index": 1,
                "name": "Unauthorized"
              }
            ]
          }
        },
        "path": [
          "vault",
          "nomination_agent_utils",
          "RuntimeError"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 16,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "InsufficientBalance"
              },
              {
                "index": 2,
                "name": "InsufficientAllowance"
              },
              {
                "index": 3,
                "name": "ZeroRecipientAddress"
              },
              {
                "index": 4,
                "name": "ZeroSenderAddress"
              },
              {
                "fields": [
                  {
                    "type": 16,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              }
            ]
          }
        },
        "path": [
          "psp22",
          "errors",
          "PSP22Error"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 20
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 15
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "sequence": {
            "type": 3
          }
        }
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 24
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 24
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 29
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 29
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "tuple": [
            4,
            30,
            31
          ]
        }
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 33
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 11
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 33
          },
          {
            "name": "E",
            "type": 11
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "tuple": [
            4,
            4,
            34,
            35
          ]
        }
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "sequence": {
            "type": 4
          }
        }
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "sequence": {
            "type": 36
          }
        }
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "primitive": "i128"
        }
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}